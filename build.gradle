buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' } // forge
        maven { url = 'https://repo.spongepowered.org/maven' } // mixin
        maven { url = 'https://plugins.gradle.org/m2/' } // curse maven
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'com.wynprice.cursemaven',   name: 'CurseMaven',  version: '2.1.1'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.wynprice.cursemaven'

version = '12'
group = 'thedarkcolour' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'hardcoredungeons'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=hardcoredungeons.mixins.json'

            mods {
                hardcoredungeons {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=hardcoredungeons.mixins.json'

            mods {
                hardcoredungeons {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=hardcoredungeons.mixins.json'

            args '--mod', 'hardcoredungeons', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                hardcoredungeons {
                    source sourceSets.main
                }
            }
        }
    }
}

// add generated models to resources
sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        name = 'curios'
        url = 'https://maven.theillusivec4.top/'
    }
    maven {
        name = 'patchouli'
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = 'ctm'
        url = 'http://maven.tterrag.com/'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "jei"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "curseforge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.58'

    // biomes o plenty
    implementation fg.deobf('curse.maven:biomes-o-plenty:3181401')
    implementation fg.deobf('curse.maven:biomes-o-plenty-source:3181402')

    // curios
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:1.16.4-4.0.3.5")

    // ctm
    implementation fg.deobf("team.chisel.ctm:CTM:MC1.16.1-1.1.2.6")

    // jei
    compileOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.0.58:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.0.58")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "hardcoredungeons",
            "Specification-Vendor": "thedarkcolour",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"thedarkcolour",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

updateMappings {
    if (project.hasProperty('UPDATE_MAPPINGS')) {
        extractRangeMap {
            sources sourceSets.main.kotlin.srcDirs
        }
        applyRangeMap {
            sources sourceSets.main.kotlin.srcDirs
        }
        sourceSets.main.kotlin.srcDirs.each { extractMappedNew.addTarget it }
    }
}

buildscript {
    repositories {
        // For early access Kotlin versions
        maven { url = "https://dl.bintray.com/kotlin/kotlin-eap" }
    }
    dependencies {
        // Make sure to use the correct version
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

repositories {
    maven {
        name = 'kotlinforforge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        name = 'Dokka'
        url = 'https://dl.bintray.com/kotlin/dokka'
    }
}

dependencies {
    // Use the latest version of KotlinForForge
    implementation 'thedarkcolour:kotlinforforge:1.10.0'
}

compileKotlin {
    // Needed if you use Forge.kt
    // and Kotlin 1.4 language features
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
}

dokka {
    outputFormat = 'kotlin-website-html'
    outputDirectory = "$buildDir/dokka"
}



apply plugin: 'org.spongepowered.mixin'
mixin {
    add sourceSets.main, 'hardcoredungeons.refmap.json'
}